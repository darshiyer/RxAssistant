{"ast":null,"code":"import React,{createContext,useContext,useReducer,useEffect}from'react';import apiService,{healthAPI,calendarAPI,prescriptionAPI}from'../services/apiService';// Initial state\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={user:null,isAuthenticated:false,prescriptions:[],healthProfile:null,recommendations:[],calendarEvents:[],currentPrescription:null,loading:{profile:false,prescriptions:false,recommendations:false,calendar:false},errors:{profile:null,prescriptions:null,recommendations:null,calendar:null}};// Action types\nconst ActionTypes={SET_USER:'SET_USER',SET_AUTHENTICATED:'SET_AUTHENTICATED',ADD_PRESCRIPTION:'ADD_PRESCRIPTION',SET_HEALTH_PROFILE:'SET_HEALTH_PROFILE',SET_RECOMMENDATIONS:'SET_RECOMMENDATIONS',ADD_CALENDAR_EVENT:'ADD_CALENDAR_EVENT',SET_CALENDAR_EVENTS:'SET_CALENDAR_EVENTS',SET_CURRENT_PRESCRIPTION:'SET_CURRENT_PRESCRIPTION',SET_LOADING:'SET_LOADING',SET_ERROR:'SET_ERROR',CLEAR_ERROR:'CLEAR_ERROR',RESET_STATE:'RESET_STATE'};// Reducer\nconst healthReducer=(state,action)=>{switch(action.type){case ActionTypes.SET_USER:return{...state,user:action.payload};case ActionTypes.SET_AUTHENTICATED:return{...state,isAuthenticated:action.payload};case ActionTypes.ADD_PRESCRIPTION:return{...state,prescriptions:[action.payload,...state.prescriptions.slice(0,9)],// Keep last 10\ncurrentPrescription:action.payload};case ActionTypes.SET_HEALTH_PROFILE:return{...state,healthProfile:action.payload};case ActionTypes.SET_RECOMMENDATIONS:return{...state,recommendations:action.payload};case ActionTypes.ADD_CALENDAR_EVENT:return{...state,calendarEvents:[action.payload,...state.calendarEvents]};case ActionTypes.SET_CALENDAR_EVENTS:return{...state,calendarEvents:action.payload};case ActionTypes.SET_CURRENT_PRESCRIPTION:return{...state,currentPrescription:action.payload};case ActionTypes.SET_LOADING:return{...state,loading:{...state.loading,[action.payload.key]:action.payload.value}};case ActionTypes.SET_ERROR:return{...state,errors:{...state.errors,[action.payload.key]:action.payload.value}};case ActionTypes.CLEAR_ERROR:return{...state,errors:{...state.errors,[action.payload]:null}};case ActionTypes.RESET_STATE:return initialState;default:return state;}};// Context\nconst HealthContext=/*#__PURE__*/createContext();// Provider component\nexport const HealthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(healthReducer,initialState);// Helper functions\nconst setLoading=(key,value)=>{dispatch({type:ActionTypes.SET_LOADING,payload:{key,value}});};const setError=(key,value)=>{dispatch({type:ActionTypes.SET_ERROR,payload:{key,value}});};const clearError=key=>{dispatch({type:ActionTypes.CLEAR_ERROR,payload:key});};// API functions\nconst fetchHealthProfile=async()=>{setLoading('profile',true);clearError('profile');try{const data=await healthAPI.getProfile();dispatch({type:ActionTypes.SET_HEALTH_PROFILE,payload:data});}catch(error){setError('profile',error.message);}finally{setLoading('profile',false);}};const fetchRecommendations=async()=>{setLoading('recommendations',true);clearError('recommendations');try{const data=await healthAPI.getRecommendations();dispatch({type:ActionTypes.SET_RECOMMENDATIONS,payload:data.recommendations||[]});}catch(error){setError('recommendations',error.message);}finally{setLoading('recommendations',false);}};const fetchCalendarEvents=async()=>{setLoading('calendar',true);clearError('calendar');try{const data=await calendarAPI.getEvents();dispatch({type:ActionTypes.SET_CALENDAR_EVENTS,payload:data});}catch(error){setError('calendar',error.message);}finally{setLoading('calendar',false);}};const processPrescription=async prescriptionData=>{var _prescriptionData$ext;// Add prescription to state\ndispatch({type:ActionTypes.ADD_PRESCRIPTION,payload:prescriptionData});// Automatically refresh related data\nawait Promise.all([fetchHealthProfile(),fetchRecommendations()]);// Create calendar events for medications\nif((_prescriptionData$ext=prescriptionData.extracted_info)!==null&&_prescriptionData$ext!==void 0&&_prescriptionData$ext.medications){for(const medication of prescriptionData.extracted_info.medications){await createMedicationReminder(medication);}}};const createMedicationReminder=async medication=>{try{var _medication$frequency;const eventData=await calendarAPI.createEvent({title:`Take ${medication.name}`,description:`Medication reminder: ${medication.name} - ${medication.dosage}\\nFrequency: ${medication.frequency}`,start_time:new Date(Date.now()+24*60*60*1000).toISOString(),duration_minutes:15,recurrence:(_medication$frequency=medication.frequency)!==null&&_medication$frequency!==void 0&&_medication$frequency.toLowerCase().includes('daily')?'daily':null});dispatch({type:ActionTypes.ADD_CALENDAR_EVENT,payload:eventData});}catch(error){console.error('Error creating medication reminder:',error);}};const login=userData=>{dispatch({type:ActionTypes.SET_USER,payload:userData});dispatch({type:ActionTypes.SET_AUTHENTICATED,payload:true});// Update API service token\nconst token=localStorage.getItem('access_token');if(token){apiService.setToken(token);}// Fetch initial data\nfetchHealthProfile();fetchRecommendations();fetchCalendarEvents();};const logout=()=>{localStorage.removeItem('access_token');localStorage.removeItem('user_profile');apiService.clearToken();dispatch({type:ActionTypes.RESET_STATE});};// Initialize data on authentication\nuseEffect(()=>{const token=localStorage.getItem('access_token');const userProfile=localStorage.getItem('user_profile');if(token&&userProfile){try{const user=JSON.parse(userProfile);apiService.setToken(token);dispatch({type:ActionTypes.SET_USER,payload:user});dispatch({type:ActionTypes.SET_AUTHENTICATED,payload:true});// Fetch initial data\nfetchHealthProfile();fetchRecommendations();fetchCalendarEvents();}catch(error){console.error('Error parsing user profile:',error);logout();}}},[]);const value={// State\n...state,// Actions\nlogin,logout,processPrescription,fetchHealthProfile,fetchRecommendations,fetchCalendarEvents,createMedicationReminder,setLoading,setError,clearError,// Dispatch for custom actions\ndispatch};return/*#__PURE__*/_jsx(HealthContext.Provider,{value:value,children:children});};// Hook to use the context\nexport const useHealth=()=>{const context=useContext(HealthContext);if(!context){throw new Error('useHealth must be used within a HealthProvider');}return context;};export default HealthContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","apiService","healthAPI","calendarAPI","prescriptionAPI","jsx","_jsx","initialState","user","isAuthenticated","prescriptions","healthProfile","recommendations","calendarEvents","currentPrescription","loading","profile","calendar","errors","ActionTypes","SET_USER","SET_AUTHENTICATED","ADD_PRESCRIPTION","SET_HEALTH_PROFILE","SET_RECOMMENDATIONS","ADD_CALENDAR_EVENT","SET_CALENDAR_EVENTS","SET_CURRENT_PRESCRIPTION","SET_LOADING","SET_ERROR","CLEAR_ERROR","RESET_STATE","healthReducer","state","action","type","payload","slice","key","value","HealthContext","HealthProvider","_ref","children","dispatch","setLoading","setError","clearError","fetchHealthProfile","data","getProfile","error","message","fetchRecommendations","getRecommendations","fetchCalendarEvents","getEvents","processPrescription","prescriptionData","_prescriptionData$ext","Promise","all","extracted_info","medications","medication","createMedicationReminder","_medication$frequency","eventData","createEvent","title","name","description","dosage","frequency","start_time","Date","now","toISOString","duration_minutes","recurrence","toLowerCase","includes","console","login","userData","token","localStorage","getItem","setToken","logout","removeItem","clearToken","userProfile","JSON","parse","Provider","useHealth","context","Error"],"sources":["/Users/darshiyer/Desktop/DeadPool/Downloads/Tsunade/Tsunade/frontend/src/contexts/HealthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport apiService, { healthAPI, calendarAPI, prescriptionAPI } from '../services/apiService';\n\n// Initial state\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  prescriptions: [],\n  healthProfile: null,\n  recommendations: [],\n  calendarEvents: [],\n  currentPrescription: null,\n  loading: {\n    profile: false,\n    prescriptions: false,\n    recommendations: false,\n    calendar: false\n  },\n  errors: {\n    profile: null,\n    prescriptions: null,\n    recommendations: null,\n    calendar: null\n  }\n};\n\n// Action types\nconst ActionTypes = {\n  SET_USER: 'SET_USER',\n  SET_AUTHENTICATED: 'SET_AUTHENTICATED',\n  ADD_PRESCRIPTION: 'ADD_PRESCRIPTION',\n  SET_HEALTH_PROFILE: 'SET_HEALTH_PROFILE',\n  SET_RECOMMENDATIONS: 'SET_RECOMMENDATIONS',\n  ADD_CALENDAR_EVENT: 'ADD_CALENDAR_EVENT',\n  SET_CALENDAR_EVENTS: 'SET_CALENDAR_EVENTS',\n  SET_CURRENT_PRESCRIPTION: 'SET_CURRENT_PRESCRIPTION',\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  RESET_STATE: 'RESET_STATE'\n};\n\n// Reducer\nconst healthReducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.SET_USER:\n      return { ...state, user: action.payload };\n    \n    case ActionTypes.SET_AUTHENTICATED:\n      return { ...state, isAuthenticated: action.payload };\n    \n    case ActionTypes.ADD_PRESCRIPTION:\n      return {\n        ...state,\n        prescriptions: [action.payload, ...state.prescriptions.slice(0, 9)], // Keep last 10\n        currentPrescription: action.payload\n      };\n    \n    case ActionTypes.SET_HEALTH_PROFILE:\n      return { ...state, healthProfile: action.payload };\n    \n    case ActionTypes.SET_RECOMMENDATIONS:\n      return { ...state, recommendations: action.payload };\n    \n    case ActionTypes.ADD_CALENDAR_EVENT:\n      return {\n        ...state,\n        calendarEvents: [action.payload, ...state.calendarEvents]\n      };\n    \n    case ActionTypes.SET_CALENDAR_EVENTS:\n      return { ...state, calendarEvents: action.payload };\n    \n    case ActionTypes.SET_CURRENT_PRESCRIPTION:\n      return { ...state, currentPrescription: action.payload };\n    \n    case ActionTypes.SET_LOADING:\n      return {\n        ...state,\n        loading: { ...state.loading, [action.payload.key]: action.payload.value }\n      };\n    \n    case ActionTypes.SET_ERROR:\n      return {\n        ...state,\n        errors: { ...state.errors, [action.payload.key]: action.payload.value }\n      };\n    \n    case ActionTypes.CLEAR_ERROR:\n      return {\n        ...state,\n        errors: { ...state.errors, [action.payload]: null }\n      };\n    \n    case ActionTypes.RESET_STATE:\n      return initialState;\n    \n    default:\n      return state;\n  }\n};\n\n// Context\nconst HealthContext = createContext();\n\n// Provider component\nexport const HealthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(healthReducer, initialState);\n\n  // Helper functions\n  const setLoading = (key, value) => {\n    dispatch({ type: ActionTypes.SET_LOADING, payload: { key, value } });\n  };\n\n  const setError = (key, value) => {\n    dispatch({ type: ActionTypes.SET_ERROR, payload: { key, value } });\n  };\n\n  const clearError = (key) => {\n    dispatch({ type: ActionTypes.CLEAR_ERROR, payload: key });\n  };\n\n  // API functions\n  const fetchHealthProfile = async () => {\n    setLoading('profile', true);\n    clearError('profile');\n    \n    try {\n      const data = await healthAPI.getProfile();\n      dispatch({ type: ActionTypes.SET_HEALTH_PROFILE, payload: data });\n    } catch (error) {\n      setError('profile', error.message);\n    } finally {\n      setLoading('profile', false);\n    }\n  };\n\n  const fetchRecommendations = async () => {\n    setLoading('recommendations', true);\n    clearError('recommendations');\n    \n    try {\n      const data = await healthAPI.getRecommendations();\n      dispatch({ type: ActionTypes.SET_RECOMMENDATIONS, payload: data.recommendations || [] });\n    } catch (error) {\n      setError('recommendations', error.message);\n    } finally {\n      setLoading('recommendations', false);\n    }\n  };\n\n  const fetchCalendarEvents = async () => {\n    setLoading('calendar', true);\n    clearError('calendar');\n    \n    try {\n      const data = await calendarAPI.getEvents();\n      dispatch({ type: ActionTypes.SET_CALENDAR_EVENTS, payload: data });\n    } catch (error) {\n      setError('calendar', error.message);\n    } finally {\n      setLoading('calendar', false);\n    }\n  };\n\n  const processPrescription = async (prescriptionData) => {\n    // Add prescription to state\n    dispatch({ type: ActionTypes.ADD_PRESCRIPTION, payload: prescriptionData });\n    \n    // Automatically refresh related data\n    await Promise.all([\n      fetchHealthProfile(),\n      fetchRecommendations()\n    ]);\n    \n    // Create calendar events for medications\n    if (prescriptionData.extracted_info?.medications) {\n      for (const medication of prescriptionData.extracted_info.medications) {\n        await createMedicationReminder(medication);\n      }\n    }\n  };\n\n  const createMedicationReminder = async (medication) => {\n    try {\n      const eventData = await calendarAPI.createEvent({\n        title: `Take ${medication.name}`,\n        description: `Medication reminder: ${medication.name} - ${medication.dosage}\\nFrequency: ${medication.frequency}`,\n        start_time: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n        duration_minutes: 15,\n        recurrence: medication.frequency?.toLowerCase().includes('daily') ? 'daily' : null\n      });\n      \n      dispatch({ type: ActionTypes.ADD_CALENDAR_EVENT, payload: eventData });\n    } catch (error) {\n      console.error('Error creating medication reminder:', error);\n    }\n  };\n\n  const login = (userData) => {\n    dispatch({ type: ActionTypes.SET_USER, payload: userData });\n    dispatch({ type: ActionTypes.SET_AUTHENTICATED, payload: true });\n    \n    // Update API service token\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      apiService.setToken(token);\n    }\n    \n    // Fetch initial data\n    fetchHealthProfile();\n    fetchRecommendations();\n    fetchCalendarEvents();\n  };\n\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user_profile');\n    apiService.clearToken();\n    dispatch({ type: ActionTypes.RESET_STATE });\n  };\n\n  // Initialize data on authentication\n  useEffect(() => {\n    const token = localStorage.getItem('access_token');\n    const userProfile = localStorage.getItem('user_profile');\n    \n    if (token && userProfile) {\n      try {\n        const user = JSON.parse(userProfile);\n        apiService.setToken(token);\n        dispatch({ type: ActionTypes.SET_USER, payload: user });\n        dispatch({ type: ActionTypes.SET_AUTHENTICATED, payload: true });\n        \n        // Fetch initial data\n        fetchHealthProfile();\n        fetchRecommendations();\n        fetchCalendarEvents();\n      } catch (error) {\n        console.error('Error parsing user profile:', error);\n        logout();\n      }\n    }\n  }, []);\n\n  const value = {\n    // State\n    ...state,\n    \n    // Actions\n    login,\n    logout,\n    processPrescription,\n    fetchHealthProfile,\n    fetchRecommendations,\n    fetchCalendarEvents,\n    createMedicationReminder,\n    setLoading,\n    setError,\n    clearError,\n    \n    // Dispatch for custom actions\n    dispatch\n  };\n\n  return (\n    <HealthContext.Provider value={value}>\n      {children}\n    </HealthContext.Provider>\n  );\n};\n\n// Hook to use the context\nexport const useHealth = () => {\n  const context = useContext(HealthContext);\n  if (!context) {\n    throw new Error('useHealth must be used within a HealthProvider');\n  }\n  return context;\n};\n\nexport default HealthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}