{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./HealthManagement.css';import{useHealth}from'../contexts/HealthContext';import{healthAPI}from'../services/apiService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HealthManagement=()=>{const{user,healthProfile,recommendations,loading,errors,fetchHealthProfile,fetchRecommendations}=useHealth();const[activeTab,setActiveTab]=useState('recommendations');const[diseaseInput,setDiseaseInput]=useState('');const[localLoading,setLocalLoading]=useState(false);const[localError,setLocalError]=useState('');// Fetch user profile on component mount\nuseEffect(()=>{if(user&&!healthProfile){fetchHealthProfile();}if(user&&!recommendations){fetchRecommendations();}},[user,healthProfile,recommendations]);const getRecommendations=async()=>{if(!diseaseInput.trim()){setLocalError('Please enter a medical condition');return;}setLocalLoading(true);setLocalError('');try{const data=await healthAPI.getHealthRecommendations({disease:diseaseInput,severity:'moderate',user_context:{age:(healthProfile===null||healthProfile===void 0?void 0:healthProfile.age)||30,gender:(healthProfile===null||healthProfile===void 0?void 0:healthProfile.gender)||'not_specified',fitness_level:(healthProfile===null||healthProfile===void 0?void 0:healthProfile.fitness_level)||'beginner'}});// Recommendations are now managed by HealthContext\n}catch(err){setLocalError('Error getting recommendations');}finally{setLocalLoading(false);}};const getPersonalizedRecommendations=async()=>{if(!healthProfile){setLocalError('User profile not available');return;}await fetchRecommendations();};const renderRecommendations=()=>{var _recommendations$exer,_recommendations$diet;if(!recommendations)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"recommendations-container\",children:[recommendations.exercise_recommendations&&/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFC3\\u200D\\u2642\\uFE0F Exercise Recommendations\"}),/*#__PURE__*/_jsx(\"div\",{className:\"recommendation-content\",children:((_recommendations$exer=recommendations.exercise_recommendations.exercises)===null||_recommendations$exer===void 0?void 0:_recommendations$exer.map((exercise,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:exercise.name}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Type:\"}),\" \",exercise.type]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Duration:\"}),\" \",exercise.duration]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Intensity:\"}),\" \",exercise.intensity]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Description:\"}),\" \",exercise.description]}),exercise.precautions&&/*#__PURE__*/_jsxs(\"p\",{className:\"precautions\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u26A0\\uFE0F Precautions:\"}),\" \",exercise.precautions]})]},index)))||/*#__PURE__*/_jsx(\"div\",{className:\"ai-recommendation\",children:/*#__PURE__*/_jsx(\"p\",{children:recommendations.exercise_recommendations})})})]}),recommendations.dietary_recommendations&&/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83E\\uDD57 Dietary Recommendations\"}),/*#__PURE__*/_jsx(\"div\",{className:\"recommendation-content\",children:((_recommendations$diet=recommendations.dietary_recommendations.foods)===null||_recommendations$diet===void 0?void 0:_recommendations$diet.map((food,index)=>{var _food$recommended,_food$avoid;return/*#__PURE__*/_jsxs(\"div\",{className:\"diet-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:food.category}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Recommended:\"}),\" \",(_food$recommended=food.recommended)===null||_food$recommended===void 0?void 0:_food$recommended.join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Avoid:\"}),\" \",(_food$avoid=food.avoid)===null||_food$avoid===void 0?void 0:_food$avoid.join(', ')]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Notes:\"}),\" \",food.notes]})]},index);}))||/*#__PURE__*/_jsx(\"div\",{className:\"ai-recommendation\",children:/*#__PURE__*/_jsx(\"p\",{children:recommendations.dietary_recommendations})})})]}),recommendations.general_advice&&/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCA1 General Health Advice\"}),/*#__PURE__*/_jsx(\"div\",{className:\"recommendation-content\",children:/*#__PURE__*/_jsx(\"p\",{children:recommendations.general_advice})})]})]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"health-management\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"health-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFE5 Health Management System\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Get personalized health recommendations based on your medical conditions\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tab-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:`tab-button ${activeTab==='recommendations'?'active':''}`,onClick:()=>setActiveTab('recommendations'),children:\"Disease Recommendations\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-button ${activeTab==='personalized'?'active':''}`,onClick:()=>setActiveTab('personalized'),children:\"Personalized Plan\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-button ${activeTab==='profile'?'active':''}`,onClick:()=>setActiveTab('profile'),children:\"Health Profile\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[activeTab==='recommendations'&&/*#__PURE__*/_jsxs(\"div\",{className:\"recommendations-tab\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Get Disease-Specific Recommendations\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter your medical condition (e.g., diabetes, hypertension)\",value:diseaseInput,onChange:e=>setDiseaseInput(e.target.value),className:\"disease-input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:getRecommendations,disabled:localLoading,className:\"get-recommendations-btn\",children:localLoading?'Getting Recommendations...':'Get Recommendations'})]})]}),renderRecommendations()]}),activeTab==='personalized'&&/*#__PURE__*/_jsxs(\"div\",{className:\"personalized-tab\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Get Personalized Health Plan\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Based on your complete health profile and medical history\"}),/*#__PURE__*/_jsx(\"button\",{onClick:getPersonalizedRecommendations,disabled:loading||!healthProfile,className:\"get-recommendations-btn\",children:loading?'Generating Plan...':'Generate Personalized Plan'})]}),renderRecommendations()]}),activeTab==='profile'&&/*#__PURE__*/_jsxs(\"div\",{className:\"profile-tab\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Health Profile\"}),healthProfile?/*#__PURE__*/_jsxs(\"div\",{className:\"profile-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Personal Information\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",healthProfile.first_name,\" \",healthProfile.last_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Age:\"}),\" \",healthProfile.age||'Not specified']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Gender:\"}),\" \",healthProfile.gender||'Not specified']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Fitness Level:\"}),\" \",healthProfile.fitness_level||'Not specified']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Medical Information\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Medical Conditions:\"}),\" \",healthProfile.medical_conditions||'None specified']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Allergies:\"}),\" \",healthProfile.allergies||'None specified']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Current Medications:\"}),\" \",healthProfile.current_medications||'None specified']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Emergency Contact:\"}),\" \",healthProfile.emergency_contact||'Not specified']})]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading profile information...\"})]})]}),(localError||(errors===null||errors===void 0?void 0:errors.profile)||(errors===null||errors===void 0?void 0:errors.recommendations))&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u274C \",localError||(errors===null||errors===void 0?void 0:errors.profile)||(errors===null||errors===void 0?void 0:errors.recommendations)]})})]});};export default HealthManagement;","map":{"version":3,"names":["React","useState","useEffect","useHealth","healthAPI","jsx","_jsx","jsxs","_jsxs","HealthManagement","user","healthProfile","recommendations","loading","errors","fetchHealthProfile","fetchRecommendations","activeTab","setActiveTab","diseaseInput","setDiseaseInput","localLoading","setLocalLoading","localError","setLocalError","getRecommendations","trim","data","getHealthRecommendations","disease","severity","user_context","age","gender","fitness_level","err","getPersonalizedRecommendations","renderRecommendations","_recommendations$exer","_recommendations$diet","className","children","exercise_recommendations","exercises","map","exercise","index","name","type","duration","intensity","description","precautions","dietary_recommendations","foods","food","_food$recommended","_food$avoid","category","recommended","join","avoid","notes","general_advice","onClick","placeholder","value","onChange","e","target","disabled","first_name","last_name","medical_conditions","allergies","current_medications","emergency_contact","profile"],"sources":["/Users/darshiyer/Desktop/DeadPool/Downloads/Tsunade/Tsunade/frontend/src/components/HealthManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './HealthManagement.css';\nimport { useHealth } from '../contexts/HealthContext';\nimport { healthAPI } from '../services/apiService';\n\nconst HealthManagement = () => {\n  const { \n    user, \n    healthProfile, \n    recommendations, \n    loading, \n    errors,\n    fetchHealthProfile,\n    fetchRecommendations \n  } = useHealth();\n  const [activeTab, setActiveTab] = useState('recommendations');\n  const [diseaseInput, setDiseaseInput] = useState('');\n  const [localLoading, setLocalLoading] = useState(false);\n  const [localError, setLocalError] = useState('');\n\n  // Fetch user profile on component mount\n  useEffect(() => {\n    if (user && !healthProfile) {\n      fetchHealthProfile();\n    }\n    if (user && !recommendations) {\n      fetchRecommendations();\n    }\n  }, [user, healthProfile, recommendations]);\n\n\n\n  const getRecommendations = async () => {\n    if (!diseaseInput.trim()) {\n      setLocalError('Please enter a medical condition');\n      return;\n    }\n\n    setLocalLoading(true);\n    setLocalError('');\n\n    try {\n      const data = await healthAPI.getHealthRecommendations({\n        disease: diseaseInput,\n        severity: 'moderate',\n        user_context: {\n          age: healthProfile?.age || 30,\n          gender: healthProfile?.gender || 'not_specified',\n          fitness_level: healthProfile?.fitness_level || 'beginner'\n        }\n      });\n      // Recommendations are now managed by HealthContext\n    } catch (err) {\n      setLocalError('Error getting recommendations');\n    } finally {\n      setLocalLoading(false);\n    }\n  };\n\n  const getPersonalizedRecommendations = async () => {\n    if (!healthProfile) {\n      setLocalError('User profile not available');\n      return;\n    }\n    await fetchRecommendations();\n  };\n\n  const renderRecommendations = () => {\n    if (!recommendations) return null;\n\n    return (\n      <div className=\"recommendations-container\">\n        {recommendations.exercise_recommendations && (\n          <div className=\"recommendation-section\">\n            <h3>🏃‍♂️ Exercise Recommendations</h3>\n            <div className=\"recommendation-content\">\n              {recommendations.exercise_recommendations.exercises?.map((exercise, index) => (\n                <div key={index} className=\"exercise-card\">\n                  <h4>{exercise.name}</h4>\n                  <p><strong>Type:</strong> {exercise.type}</p>\n                  <p><strong>Duration:</strong> {exercise.duration}</p>\n                  <p><strong>Intensity:</strong> {exercise.intensity}</p>\n                  <p><strong>Description:</strong> {exercise.description}</p>\n                  {exercise.precautions && (\n                    <p className=\"precautions\"><strong>⚠️ Precautions:</strong> {exercise.precautions}</p>\n                  )}\n                </div>\n              )) || (\n                <div className=\"ai-recommendation\">\n                  <p>{recommendations.exercise_recommendations}</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {recommendations.dietary_recommendations && (\n          <div className=\"recommendation-section\">\n            <h3>🥗 Dietary Recommendations</h3>\n            <div className=\"recommendation-content\">\n              {recommendations.dietary_recommendations.foods?.map((food, index) => (\n                <div key={index} className=\"diet-card\">\n                  <h4>{food.category}</h4>\n                  <p><strong>Recommended:</strong> {food.recommended?.join(', ')}</p>\n                  <p><strong>Avoid:</strong> {food.avoid?.join(', ')}</p>\n                  <p><strong>Notes:</strong> {food.notes}</p>\n                </div>\n              )) || (\n                <div className=\"ai-recommendation\">\n                  <p>{recommendations.dietary_recommendations}</p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {recommendations.general_advice && (\n          <div className=\"recommendation-section\">\n            <h3>💡 General Health Advice</h3>\n            <div className=\"recommendation-content\">\n              <p>{recommendations.general_advice}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"health-management\">\n      <div className=\"health-header\">\n        <h2>🏥 Health Management System</h2>\n        <p>Get personalized health recommendations based on your medical conditions</p>\n      </div>\n\n      <div className=\"tab-navigation\">\n        <button \n          className={`tab-button ${activeTab === 'recommendations' ? 'active' : ''}`}\n          onClick={() => setActiveTab('recommendations')}\n        >\n          Disease Recommendations\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'personalized' ? 'active' : ''}`}\n          onClick={() => setActiveTab('personalized')}\n        >\n          Personalized Plan\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'profile' ? 'active' : ''}`}\n          onClick={() => setActiveTab('profile')}\n        >\n          Health Profile\n        </button>\n      </div>\n\n      <div className=\"tab-content\">\n        {activeTab === 'recommendations' && (\n          <div className=\"recommendations-tab\">\n            <div className=\"input-section\">\n              <h3>Get Disease-Specific Recommendations</h3>\n              <div className=\"input-group\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter your medical condition (e.g., diabetes, hypertension)\"\n                  value={diseaseInput}\n                  onChange={(e) => setDiseaseInput(e.target.value)}\n                  className=\"disease-input\"\n                />\n                <button \n                  onClick={getRecommendations}\n                  disabled={localLoading}\n                  className=\"get-recommendations-btn\"\n                >\n                  {localLoading ? 'Getting Recommendations...' : 'Get Recommendations'}\n                </button>\n              </div>\n            </div>\n            {renderRecommendations()}\n          </div>\n        )}\n\n        {activeTab === 'personalized' && (\n          <div className=\"personalized-tab\">\n            <div className=\"input-section\">\n              <h3>Get Personalized Health Plan</h3>\n              <p>Based on your complete health profile and medical history</p>\n              <button \n                onClick={getPersonalizedRecommendations}\n                disabled={loading || !healthProfile}\n                className=\"get-recommendations-btn\"\n              >\n                {loading ? 'Generating Plan...' : 'Generate Personalized Plan'}\n              </button>\n            </div>\n            {renderRecommendations()}\n          </div>\n        )}\n\n        {activeTab === 'profile' && (\n          <div className=\"profile-tab\">\n            <h3>Your Health Profile</h3>\n            {healthProfile ? (\n              <div className=\"profile-info\">\n                <div className=\"profile-section\">\n                  <h4>Personal Information</h4>\n                  <p><strong>Name:</strong> {healthProfile.first_name} {healthProfile.last_name}</p>\n                  <p><strong>Age:</strong> {healthProfile.age || 'Not specified'}</p>\n                  <p><strong>Gender:</strong> {healthProfile.gender || 'Not specified'}</p>\n                  <p><strong>Fitness Level:</strong> {healthProfile.fitness_level || 'Not specified'}</p>\n                </div>\n                \n                <div className=\"profile-section\">\n                  <h4>Medical Information</h4>\n                  <p><strong>Medical Conditions:</strong> {healthProfile.medical_conditions || 'None specified'}</p>\n                  <p><strong>Allergies:</strong> {healthProfile.allergies || 'None specified'}</p>\n                  <p><strong>Current Medications:</strong> {healthProfile.current_medications || 'None specified'}</p>\n                  <p><strong>Emergency Contact:</strong> {healthProfile.emergency_contact || 'Not specified'}</p>\n                </div>\n              </div>\n            ) : (\n              <p>Loading profile information...</p>\n            )}\n          </div>\n        )}\n      </div>\n\n      {(localError || errors?.profile || errors?.recommendations) && (\n        <div className=\"error-message\">\n          <p>❌ {localError || errors?.profile || errors?.recommendations}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HealthManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}